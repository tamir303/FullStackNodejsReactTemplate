version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./api_logs:/var/log/app  # Mounting the logs
    ports:
      - "5044:5044"  # For receiving logs from apps
      - "9600:9600"  # Logstash HTTP API
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  api-gateway:
    image: api-gateway
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - BACKEND_SERVICE=http://backend:4000
    networks:
      - my-network

  backend:
    image: backend
    build: ./backend
    ports:
      - "4000:4000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/development
    networks:
      - my-network
    depends_on:
      - mongo

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - my-network

  frontend:
    image: frontend
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - API_HOST=http://api-gateway:8080
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
  elk:
    driver: bridge

volumes:
  esdata:
    driver: local